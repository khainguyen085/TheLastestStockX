[{"/Users/mac/StockX/StockX/FrontEnd/src/index.js":"1","/Users/mac/StockX/StockX/FrontEnd/src/store.js":"2","/Users/mac/StockX/StockX/FrontEnd/src/App.js":"3","/Users/mac/StockX/StockX/FrontEnd/src/reducers/productReducers.js":"4","/Users/mac/StockX/StockX/FrontEnd/src/reducers/cartReducers.js":"5","/Users/mac/StockX/StockX/FrontEnd/src/reducers/userReducers.js":"6","/Users/mac/StockX/StockX/FrontEnd/src/reducers/orderReducers.js":"7","/Users/mac/StockX/StockX/FrontEnd/src/components/TopBackground.js":"8","/Users/mac/StockX/StockX/FrontEnd/src/components/Footer.js":"9","/Users/mac/StockX/StockX/FrontEnd/src/components/StickyFooter.js":"10","/Users/mac/StockX/StockX/FrontEnd/src/screens/HomeScreen.js":"11","/Users/mac/StockX/StockX/FrontEnd/src/screens/ProductScreen.js":"12","/Users/mac/StockX/StockX/FrontEnd/src/components/Header.js":"13","/Users/mac/StockX/StockX/FrontEnd/src/screens/CartScreen.js":"14","/Users/mac/StockX/StockX/FrontEnd/src/screens/PaymentScreen.js":"15","/Users/mac/StockX/StockX/FrontEnd/src/screens/ShippingScreen.js":"16","/Users/mac/StockX/StockX/FrontEnd/src/screens/OrderScreen.js":"17","/Users/mac/StockX/StockX/FrontEnd/src/screens/PlaceOrderScreen.js":"18","/Users/mac/StockX/StockX/FrontEnd/src/screens/RegisterScreen.js":"19","/Users/mac/StockX/StockX/FrontEnd/src/screens/ProfileScreen.js":"20","/Users/mac/StockX/StockX/FrontEnd/src/screens/LoginScreen.js":"21","/Users/mac/StockX/StockX/FrontEnd/src/components/Message.js":"22","/Users/mac/StockX/StockX/FrontEnd/src/components/SearchBox.js":"23","/Users/mac/StockX/StockX/FrontEnd/src/components/Rating.js":"24","/Users/mac/StockX/StockX/FrontEnd/src/components/FormContainer.js":"25","/Users/mac/StockX/StockX/FrontEnd/src/components/CheckoutSteps.js":"26","/Users/mac/StockX/StockX/FrontEnd/src/components/Loader.js":"27","/Users/mac/StockX/StockX/FrontEnd/src/components/Paginate.js":"28","/Users/mac/StockX/StockX/FrontEnd/src/components/Product.js":"29","/Users/mac/StockX/StockX/FrontEnd/src/constants/cartConstants.js":"30","/Users/mac/StockX/StockX/FrontEnd/src/constants/orderConstants.js":"31","/Users/mac/StockX/StockX/FrontEnd/src/constants/userConstants.js":"32","/Users/mac/StockX/StockX/FrontEnd/src/constants/productConstants.js":"33","/Users/mac/StockX/StockX/FrontEnd/src/actions/orderActions.js":"34","/Users/mac/StockX/StockX/FrontEnd/src/actions/cartActions.js":"35","/Users/mac/StockX/StockX/FrontEnd/src/actions/userActions.js":"36","/Users/mac/StockX/StockX/FrontEnd/src/actions/productActions.js":"37"},{"size":520,"mtime":1608016518498,"results":"38","hashOfConfig":"39"},{"size":1706,"mtime":1608016518508,"results":"40","hashOfConfig":"39"},{"size":2069,"mtime":1608026812603,"results":"41","hashOfConfig":"39"},{"size":1169,"mtime":1608016518502,"results":"42","hashOfConfig":"39"},{"size":1121,"mtime":1608016518500,"results":"43","hashOfConfig":"39"},{"size":1953,"mtime":1608016518502,"results":"44","hashOfConfig":"39"},{"size":2362,"mtime":1608016518500,"results":"45","hashOfConfig":"39"},{"size":336,"mtime":1608016518494,"results":"46","hashOfConfig":"39"},{"size":2946,"mtime":1608026311939,"results":"47","hashOfConfig":"39"},{"size":684,"mtime":1608018476736,"results":"48","hashOfConfig":"39"},{"size":1565,"mtime":1608017557702,"results":"49","hashOfConfig":"39"},{"size":3833,"mtime":1608016518505,"results":"50","hashOfConfig":"39"},{"size":2276,"mtime":1608016518490,"results":"51","hashOfConfig":"39"},{"size":3625,"mtime":1608016518503,"results":"52","hashOfConfig":"39"},{"size":1746,"mtime":1608016518504,"results":"53","hashOfConfig":"39"},{"size":2688,"mtime":1608016518507,"results":"54","hashOfConfig":"39"},{"size":6500,"mtime":1608016518504,"results":"55","hashOfConfig":"39"},{"size":5338,"mtime":1608016518505,"results":"56","hashOfConfig":"39"},{"size":3147,"mtime":1608016518506,"results":"57","hashOfConfig":"39"},{"size":5436,"mtime":1608016518505,"results":"58","hashOfConfig":"39"},{"size":2232,"mtime":1608016518503,"results":"59","hashOfConfig":"39"},{"size":237,"mtime":1608016518490,"results":"60","hashOfConfig":"39"},{"size":955,"mtime":1608016518491,"results":"61","hashOfConfig":"39"},{"size":1716,"mtime":1608016518491,"results":"62","hashOfConfig":"39"},{"size":331,"mtime":1608016518490,"results":"63","hashOfConfig":"39"},{"size":1239,"mtime":1608016518489,"results":"64","hashOfConfig":"39"},{"size":384,"mtime":1608016518490,"results":"65","hashOfConfig":"39"},{"size":695,"mtime":1608016518490,"results":"66","hashOfConfig":"39"},{"size":867,"mtime":1608016518490,"results":"67","hashOfConfig":"39"},{"size":234,"mtime":1608016518495,"results":"68","hashOfConfig":"39"},{"size":787,"mtime":1608016518495,"results":"69","hashOfConfig":"39"},{"size":888,"mtime":1608016518497,"results":"70","hashOfConfig":"39"},{"size":360,"mtime":1608016518495,"results":"71","hashOfConfig":"39"},{"size":3282,"mtime":1608016518487,"results":"72","hashOfConfig":"39"},{"size":1201,"mtime":1608016518487,"results":"73","hashOfConfig":"39"},{"size":3490,"mtime":1608016518488,"results":"74","hashOfConfig":"39"},{"size":1247,"mtime":1608016518488,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"1mii8xu",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"78"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"78"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"78"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"78"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"78"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"78"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"78"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"78"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"78"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"78"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"/Users/mac/StockX/StockX/FrontEnd/src/index.js",[],["161","162"],"/Users/mac/StockX/StockX/FrontEnd/src/store.js",[],"/Users/mac/StockX/StockX/FrontEnd/src/App.js",["163","164","165"],"/Users/mac/StockX/StockX/FrontEnd/src/reducers/productReducers.js",[],"/Users/mac/StockX/StockX/FrontEnd/src/reducers/cartReducers.js",["166"],"import {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n} from '../constants/cartConstants'\n\nexport const cartReducer = (\n  state = { cartItems: [], shippingAddress: {} },\n  action\n) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload\n      const exitItem = state.cartItems.find((x) => x.product === item.product)\n\n      if (exitItem) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map((x) =>\n            x.product === exitItem.product ? item : x\n          ),\n        }\n      } else {\n        return {\n          ...state,\n          cartItems: [...state.cartItems, item],\n        }\n      }\n    case CART_REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter((x) => x.product != action.payload),\n      }\n    case CART_SAVE_SHIPPING_ADDRESS:\n      return {\n        ...state,\n        shippingAddress: action.payload,\n      }\n    case CART_SAVE_PAYMENT_METHOD:\n      return {\n        ...state,\n        paymentMethod: action.payload,\n      }\n    default:\n      return state\n  }\n}\n","/Users/mac/StockX/StockX/FrontEnd/src/reducers/userReducers.js",[],"/Users/mac/StockX/StockX/FrontEnd/src/reducers/orderReducers.js",[],"/Users/mac/StockX/StockX/FrontEnd/src/components/TopBackground.js",[],"/Users/mac/StockX/StockX/FrontEnd/src/components/Footer.js",["167","168","169","170","171","172","173","174","175"],"/Users/mac/StockX/StockX/FrontEnd/src/components/StickyFooter.js",["176"],"import React from 'react'\nimport { Link } from 'react-router-dom'\nfunction StickyFooter({ products, productsFull }) {\n  return (\n    <div className='footer' style={{zIndex:\"900\"}}>\n      <marquee behavior='left'>\n        {productsFull.map((product) => (\n          <Link\n            to={`/product/${product._id}`}\n            style={{ textDecoration: 'none' }}\n            key={product._id}\n          >\n            <span style={{ paddingLeft: '40px', color: 'white' }}>\n              {product.name}\n            </span>{' '}\n            <span style={{ color: 'teal' }}>${product.price}</span>\n          </Link>\n        ))}\n      </marquee>\n    </div>\n  )\n}\n\nexport default StickyFooter\n","/Users/mac/StockX/StockX/FrontEnd/src/screens/HomeScreen.js",[],"/Users/mac/StockX/StockX/FrontEnd/src/screens/ProductScreen.js",[],"/Users/mac/StockX/StockX/FrontEnd/src/components/Header.js",["177"],"import React from 'react'\nimport { Route } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\nimport { logout } from '../actions/userActions'\nimport SearchBox from './SearchBox'\n// import styled from 'styled-components/'\n\nconst Header = () => {\n  const dispatch = useDispatch()\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n  const logoutHandler = () => {\n    dispatch(logout())\n  }\n  return (\n    <header>\n      <Navbar bg='dark' variant='dark' expand='lg' collapseOnSelect style={{position:\"fixed\", zIndex:\"1\", width:\"100%\", height:\"10%\"}  }>\n        <Container>\n          <LinkContainer to='/'>\n            <Navbar.Brand><img src=\"https://uploads-ssl.webflow.com/5d88c7f9a711b146c3b326a9/5d892c241cb5fe0c96fc7c18_stockx-vector-logo.png\" style={{width:\"85px\"}}></img></Navbar.Brand>\n          </LinkContainer>\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\n          <Navbar.Collapse id='basic-navbar-nav'>\n            <Route render={({ history }) => <SearchBox history={history} />} />\n            <Nav className='ml-auto'>\n              <LinkContainer to='/cart'>\n                <Nav.Link>\n                  <i className='fas fa-shopping-cart'></i>Cart\n                </Nav.Link>\n              </LinkContainer>\n              {userInfo ? (\n                <NavDropdown title={userInfo.name} id='username'>\n                  <LinkContainer to='/profile'>\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\n                  </LinkContainer>\n                  <NavDropdown.Item onClick={logoutHandler}>\n                    Logout\n                  </NavDropdown.Item>\n                </NavDropdown>\n              ) : (\n                <LinkContainer to='/login'>\n                  <Nav.Link>\n                    <i className='fas fa-user'></i>Sign In\n                  </Nav.Link>\n                </LinkContainer>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  )\n}\n\n// const NavbarWrapper = styled.Navbar`\n// position: fixed;\n// background: red;\n// `\n\nexport default Header\n","/Users/mac/StockX/StockX/FrontEnd/src/screens/CartScreen.js",["178","179"],"import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport {\n  Row,\n  Col,\n  ListGroup,\n  Image,\n  Form,\n  Button,\n  Card,\n  ListGroupItem,\n} from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { addToCart, removeFromCart } from '../actions/cartActions'\nimport Product from '../components/Product'\n\nconst CartScreen = ({ match, location, history }) => {\n  const productId = match.params.id\n\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1\n\n  const dispatch = useDispatch()\n\n  const cart = useSelector((state) => state.cart)\n  const { cartItems } = cart\n\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty))\n    }\n  }, [dispatch, productId, qty])\n\n  const removeFromCartHandler = (id) => {\n    dispatch(removeFromCart(id))\n  }\n  const checkoutHandler = () => {\n    history.push('/login?redirect=shipping')\n  }\n\n  return (\n    <Row>\n      <Col md={8}>\n        <h1>Shopping Cart</h1>\n        {cartItems.length === 0 ? (\n          <Message>\n            Your cart is empty<Link to='/'> GO BACK</Link>\n          </Message>\n        ) : (\n          <ListGroup variant='flush'>\n            {cartItems.map((item) => (\n              <ListGroup.Item key={item.product}>\n                <Row>\n                  <Col md={2}>\n                    <Image src={item.image} alt={item.name} fluid rounded />\n                  </Col>\n                  <Col md={3}>\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\n                  </Col>\n                  <Col md={2}>${item.price}</Col>\n                  <Col md={2}>\n                    <Form.Control\n                      as='select'\n                      value={item.qty}\n                      onChange={(e) =>\n                        dispatch(\n                          addToCart(item.product, Number(e.target.value))\n                        )\n                      }\n                    >\n                      {[...Array(item.countInStock).keys()].map((x) => (\n                        <option key={x + 1} value={x + 1}>\n                          {x + 1}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Col>\n                  <Col md={2}>\n                    <Button\n                      type='button'\n                      variant='light'\n                      onClick={() => removeFromCartHandler(item.product)}\n                    >\n                      <i className='fas fa-trash'></i>\n                    </Button>\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        )}\n      </Col>\n      <Col md={4}>\n        <Card>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\n                items\n              </h2>\n              $\n              {cartItems\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\n                .toFixed(2)}\n            </ListGroup.Item>\n            <ListGroupItem>\n              <Button\n                type='button'\n                className='btn-block'\n                disabled={cartItems.length === 0}\n                onClick={checkoutHandler}\n              >\n                Proceed To Checkout\n              </Button>\n            </ListGroupItem>\n          </ListGroup>\n        </Card>\n      </Col>\n    </Row>\n  )\n}\n\nexport default CartScreen\n","/Users/mac/StockX/StockX/FrontEnd/src/screens/PaymentScreen.js",[],"/Users/mac/StockX/StockX/FrontEnd/src/screens/ShippingScreen.js",[],"/Users/mac/StockX/StockX/FrontEnd/src/screens/OrderScreen.js",["180","181","182"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport { Link } from 'react-router-dom'\nimport {\n  Button,\n  Row,\n  Col,\n  ListGroup,\n  Image,\n  Card,\n  ListGroupItem,\n} from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getOrderDetails, payOrder } from '../actions/orderActions'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { ORDER_PAY_RESET } from '../constants/orderConstants'\n\nconst OrderScreen = ({ match }) => {\n  const orderId = match.params.id\n  const [sdkReady, setSdkReady] = useState(false)\n\n  const dispatch = useDispatch()\n  const orderDetails = useSelector((state) => state.orderDetails)\n\n  const { order, loading, error } = orderDetails\n  const orderPay = useSelector((state) => state.orderPay)\n  const { loading: loadingPay, success: successPay } = orderPay\n\n  const userDetails = useSelector((state) => state.userDetails)\n  const { user } = userDetails\n\n  if (!loading) {\n    const addDecimals = (num) => {\n      return (Math.round(num * 100) / 100).toFixed(2)\n    }\n\n    order.itemsPrice = addDecimals(\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n    )\n  }\n\n  useEffect(() => {\n    const addPayPalScript = async () => {\n      const { data: clientId } = await axios.get('/api/config/paypal')\n      const script = document.createElement('script')\n      script.type = 'text/javascript'\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\n      script.async = true\n      script.onload = () => {\n        setSdkReady(true)\n      }\n      document.body.appendChild(script)\n    }\n    if (!order || successPay) {\n      dispatch({ type: ORDER_PAY_RESET })\n      dispatch(getOrderDetails(orderId))\n    } else if (!order.isPaid) {\n      if (!window.paypal) {\n        addPayPalScript()\n      } else {\n        setSdkReady(true)\n      }\n    }\n    dispatch(getUserDetails('profile'))\n  }, [dispatch, orderId, successPay, order])\n\n  const successPaymentHandler = (paymentResult) => {\n    console.log(paymentResult)\n    console.log(orderId)\n    dispatch(payOrder(orderId, paymentResult))\n  }\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant='danger'>{error}</Message>\n  ) : (\n    <>\n      <h1>Order {order._id}</h1>\n      <Row>\n        <Col md={8}>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Name: </strong>\n                {user.name}\n              </p>\n              <p>\n                <strong>Email:</strong>{' '}\n                <a href={`mailto:${user.email}`}>{user.email}</a>\n              </p>\n              <p>\n                <strong>Address:</strong>\n                {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\n                {order.shippingAddress.postalCode},{' '}\n                {order.shippingAddress.country}\n              </p>\n              {order.isDelivered ? (\n                <Message variant='success'>\n                  Delivered on {order.deliveredAt}\n                </Message>\n              ) : (\n                <Message variant='danger'>Not Delivered</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <p>\n                <strong>Method: </strong>\n                {order.paymentMethod}\n              </p>\n              {order.isPaid ? (\n                <Message variant='success'>Paid on {order.paidAt}</Message>\n              ) : (\n                <Message variant='danger'>Not Paid</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {order.orderItems.length === 0 ? (\n                <Message>Order is empty</Message>\n              ) : (\n                <ListGroup variant='flush'>\n                  {order.orderItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>${order.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>${order.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>${order.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>${order.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              {!order.isPaid && (\n                <ListGroup.Item>\n                  {loadingPay && <Loader />}\n                  {!sdkReady ? (\n                    <Loader />\n                  ) : (\n                    <PayPalButton\n                      amount={order.totalPrice}\n                      onSuccess={successPaymentHandler}\n                    />\n                  )}\n                </ListGroup.Item>\n              )}\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default OrderScreen\n","/Users/mac/StockX/StockX/FrontEnd/src/screens/PlaceOrderScreen.js",["183","184","185"],"import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { createOrder } from '../actions/orderActions'\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\nimport { USER_DETAILS_RESET } from '../constants/userConstants'\nimport { orderCreateReducer } from '../reducers/orderReducers'\n\nconst PlaceOrderScreen = ({ history }) => {\n  const dispatch = useDispatch()\n\n  const cart = useSelector((state) => state.cart)\n\n  if (!cart.shippingAddress.address) {\n    history.push('/shipping')\n  } else if (!cart.paymentMethod) {\n    history.push('/payment')\n  }\n  //   Calculate prices\n  const addDecimals = (num) => {\n    return (Math.round(num * 100) / 100).toFixed(2)\n  }\n\n  cart.itemsPrice = addDecimals(\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n  )\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\n  cart.totalPrice = (\n    Number(cart.itemsPrice) +\n    Number(cart.shippingPrice) +\n    Number(cart.taxPrice)\n  ).toFixed(2)\n\n  const orderCreate = useSelector((state) => state.orderCreate)\n  const { order, success, error } = orderCreate\n\n  useEffect(() => {\n    if (success) {\n      history.push(`/order/${order._id}`)\n    }\n    // eslint-disable-next-line\n  }, [history, success])\n\n  const placeOrderHandler = () => {\n    dispatch(\n      createOrder({\n        orderItems: cart.cartItems,\n        shippingAddress: cart.shippingAddress,\n        paymentMethod: cart.paymentMethod,\n        itemsPrice: cart.itemsPrice,\n        shippingPrice: cart.shippingPrice,\n        taxPrice: cart.taxPrice,\n        totalPrice: cart.totalPrice,\n      })\n    )\n  }\n\n  return (\n    <>\n      <CheckoutSteps step1 step2 step3 step4 />\n      <Row>\n        <Col md={8}>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Address:</strong>\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}{' '}\n                {cart.shippingAddress.postalCode},{' '}\n                {cart.shippingAddress.country}\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <strong>Method: </strong>\n              {cart.paymentMethod}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {cart.cartItems.length === 0 ? (\n                <Message>Your cart is empty</Message>\n              ) : (\n                <ListGroup variant='flush'>\n                  {cart.cartItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>${cart.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>${cart.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>${cart.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>${cart.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                {error && <Message variant='danger'>{error}</Message>}\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Button\n                  type='button'\n                  className='btn-block'\n                  disabled={cart.cartItems === 0}\n                  onClick={placeOrderHandler}\n                >\n                  Place Order\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default PlaceOrderScreen\n","/Users/mac/StockX/StockX/FrontEnd/src/screens/RegisterScreen.js",["186"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Col, Row, Form, Button, FormGroup, FormLabel } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'\n\nconst RegisterScreen = ({ location, history }) => {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [message, setMessage] = useState(null)\n  const dispatch = useDispatch()\n  const userRegister = useSelector((state) => state.userRegister)\n\n  const { loading, error, userInfo } = userRegister\n\n  const redirect = location.search ? location.search.split('=')[1] : '/'\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect)\n    }\n  }, [history, userInfo, redirect])\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (password !== confirmPassword) {\n      setMessage('Password do not match')\n    } else {\n      // DISPATCH REGISTER\n      dispatch(register(name, email, password))\n    }\n  }\n  return (\n    <FormContainer>\n      <h1>Sign Up</h1>\n      {message && <Message variant='danger'>{message}</Message>}\n      {error && <Message variant='danger'>{error}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='name'>\n          <FormLabel>Name</FormLabel>\n          <Form.Control\n            type='name'\n            placeholder='Enter Name'\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId='email'>\n          <FormLabel>Email Address</FormLabel>\n          <Form.Control\n            type='email'\n            placeholder='Enter Email'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId='password'>\n          <FormLabel>Password</FormLabel>\n          <Form.Control\n            type='password'\n            placeholder='Enter password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId='confirmPassword'>\n          <FormLabel>Confirm Password</FormLabel>\n          <Form.Control\n            type='password'\n            placeholder='Confirm password'\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Button type='submit' variant='primary'>\n          Register\n        </Button>\n      </Form>\n      <Row className='py-3'>\n        <Col>\n          Have an account?{' '}\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n            Login\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  )\n}\n\nexport default RegisterScreen\n","/Users/mac/StockX/StockX/FrontEnd/src/screens/ProfileScreen.js",["187","188"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport {\n  Col,\n  Row,\n  Form,\n  Button,\n  FormGroup,\n  FormLabel,\n  Table,\n} from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { listMyOrder } from '../actions/orderActions'\nconst ProfileScreen = ({ location, history }) => {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [message, setMessage] = useState(null)\n\n  const dispatch = useDispatch()\n\n  const userDetails = useSelector((state) => state.userDetails)\n  const { loading, error, user } = userDetails\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\n  const { success } = userUpdateProfile\n\n  const orderListMy = useSelector((state) => state.orderListMy)\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login')\n    } else {\n      console.log(user)\n      if (!user.name) {\n        dispatch(getUserDetails('profile'))\n        dispatch(listMyOrder())\n      } else {\n        setName(user.name)\n        setEmail(user.email)\n      }\n    }\n  }, [dispatch, history, userInfo, user])\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (password !== confirmPassword) {\n      setMessage('Password do not match')\n    } else {\n      // DISPATCH UPDATE PROFILE\n      dispatch(updateUserProfile({ id: user._id, name, email, password }))\n    }\n  }\n  return (\n    <Row>\n      <Col md={3}>\n        <h2>User Profile</h2>\n        {message && <Message variant='danger'>{message}</Message>}\n        {error && <Message variant='danger'>{error}</Message>}\n        {success && <Message variant='success'>Profile Updated</Message>}\n        {loading && <Loader />}\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId='name'>\n            <FormLabel>Name</FormLabel>\n            <Form.Control\n              type='name'\n              placeholder='Enter Name'\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId='email'>\n            <FormLabel>Email Address</FormLabel>\n            <Form.Control\n              type='email'\n              placeholder='Enter Email'\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <FormLabel>Password</FormLabel>\n            <Form.Control\n              type='password'\n              placeholder='Enter password'\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId='confirmPassword'>\n            <FormLabel>Confirm Password</FormLabel>\n            <Form.Control\n              type='password'\n              placeholder='Confirm password'\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Button type='submit' variant='primary'>\n            Update\n          </Button>\n        </Form>\n      </Col>\n      <Col md={9}>\n        <h2>My Orders</h2>\n        {loadingOrders ? (\n          <Loader />\n        ) : errorOrders ? (\n          <Message variant='danger'>{errorOrders}</Message>\n        ) : (\n          <Table striped bordered hover responsive className='table-sm'>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>DATE</th>\n                <th>TOTAL</th>\n                <th>PAID</th>\n                <th>DELIVERED</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {orders.map((order) => (\n                <tr key={order._id}>\n                  <td>{order._id}</td>\n                  <td>{order.createdAt.substring(0, 10)}</td>\n                  <td>${order.totalPrice}</td>\n                  <td>\n                    {order.isPaid ? (\n                      order.paidAt.substring(0, 10)\n                    ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>\n                    {order.isDelivered ? (\n                      order.delieveredAt.substring(0, 10)\n                    ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>\n                    <LinkContainer to={`/order/${order._id}`}>\n                      <Button className='btn-sm' variant='light'>\n                        Details\n                      </Button>\n                    </LinkContainer>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        )}\n      </Col>\n    </Row>\n  )\n}\n\nexport default ProfileScreen\n","/Users/mac/StockX/StockX/FrontEnd/src/screens/LoginScreen.js",["189","190"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Col, Row, Form, Button, FormGroup, FormLabel } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { login } from '../actions/userActions'\nimport { userLoginReducer } from '../reducers/userReducers'\n\nconst LoginScreen = ({ location, history }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const dispatch = useDispatch()\n  const userLogin = useSelector((state) => state.userLogin)\n\n  const { loading, error, userInfo } = userLogin\n\n  const redirect = location.search ? location.search.split('=')[1] : '/'\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect)\n    }\n  }, [history, userInfo, redirect])\n  const submitHandler = (e) => {\n    e.preventDefault()\n    // DISPATCH LOGIN\n    dispatch(login(email, password))\n  }\n  return (\n    <FormContainer>\n      <h1>Sign In</h1>\n      {error && <Message variant='danger'>{error}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='email'>\n          <FormLabel>Email Address</FormLabel>\n          <Form.Control\n            type='email'\n            placeholder='Enter Email'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId='password'>\n          <FormLabel>Password</FormLabel>\n          <Form.Control\n            type='password'\n            placeholder='Enter password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Button type='submit' variant='primary'>\n          Sign In\n        </Button>\n      </Form>\n      <Row className='py-3'>\n        <Col>\n          New Customer?{' '}\n          <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\n            Register\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  )\n}\n\nexport default LoginScreen\n","/Users/mac/StockX/StockX/FrontEnd/src/components/Message.js",[],"/Users/mac/StockX/StockX/FrontEnd/src/components/SearchBox.js",["191"],"import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nconst SearchBox = ({ history }) => {\n  const [keyword, setKeyword] = useState('')\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (keyword.trim()) {\n      history.push(`/search/${keyword}`)\n    } else {\n      history.push('/')\n    }\n  }\n  return (\n    <Form onSubmit={submitHandler} inline style={{backgroundColor:\"white\"}}>\n      <i className=\"fas fa-search\" style={{paddingLeft:\"10px\",marginLeft:\"5px\"}}></i><Form.Control\n      style={{width:\"400px\",backgroundColor:\"white\"}}\n        type='text'\n        name='q'\n        onChange={(e) => setKeyword(e.target.value)}\n        placeholder='Search...'\n        className='mr-sm=2'\n      ></Form.Control>\n      {/* <Button type='submit' variant='outline-success' className='p-2' style={{backgroundColor:\"white\",border:\"none\"}}>\n        Search\n      </Button> */}\n    </Form>\n  )\n}\n\nexport default SearchBox\n","/Users/mac/StockX/StockX/FrontEnd/src/components/Rating.js",[],"/Users/mac/StockX/StockX/FrontEnd/src/components/FormContainer.js",[],"/Users/mac/StockX/StockX/FrontEnd/src/components/CheckoutSteps.js",[],"/Users/mac/StockX/StockX/FrontEnd/src/components/Loader.js",[],"/Users/mac/StockX/StockX/FrontEnd/src/components/Paginate.js",[],"/Users/mac/StockX/StockX/FrontEnd/src/components/Product.js",[],"/Users/mac/StockX/StockX/FrontEnd/src/constants/cartConstants.js",[],"/Users/mac/StockX/StockX/FrontEnd/src/constants/orderConstants.js",[],"/Users/mac/StockX/StockX/FrontEnd/src/constants/userConstants.js",[],"/Users/mac/StockX/StockX/FrontEnd/src/constants/productConstants.js",[],"/Users/mac/StockX/StockX/FrontEnd/src/actions/orderActions.js",[],"/Users/mac/StockX/StockX/FrontEnd/src/actions/cartActions.js",[],"/Users/mac/StockX/StockX/FrontEnd/src/actions/userActions.js",[],"/Users/mac/StockX/StockX/FrontEnd/src/actions/productActions.js",[],{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","severity":1,"message":"197","line":16,"column":10,"nodeType":"198","messageId":"199","endLine":16,"endColumn":21},{"ruleId":"196","severity":1,"message":"200","line":19,"column":11,"nodeType":"198","messageId":"199","endLine":19,"endColumn":19},{"ruleId":"196","severity":1,"message":"201","line":19,"column":21,"nodeType":"198","messageId":"199","endLine":19,"endColumn":33},{"ruleId":"202","severity":1,"message":"203","line":33,"column":60,"nodeType":"204","messageId":"205","endLine":33,"endColumn":62},{"ruleId":"196","severity":1,"message":"206","line":2,"column":10,"nodeType":"198","messageId":"199","endLine":2,"endColumn":19},{"ruleId":"196","severity":1,"message":"207","line":2,"column":21,"nodeType":"198","messageId":"199","endLine":2,"endColumn":24},{"ruleId":"196","severity":1,"message":"208","line":2,"column":26,"nodeType":"198","messageId":"199","endLine":2,"endColumn":29},{"ruleId":"209","severity":1,"message":"210","line":15,"column":30,"nodeType":"211","endLine":15,"endColumn":196},{"ruleId":"209","severity":1,"message":"210","line":16,"column":30,"nodeType":"211","endLine":16,"endColumn":182},{"ruleId":"209","severity":1,"message":"210","line":17,"column":30,"nodeType":"211","endLine":17,"endColumn":144},{"ruleId":"209","severity":1,"message":"210","line":18,"column":30,"nodeType":"211","endLine":18,"endColumn":196},{"ruleId":"209","severity":1,"message":"210","line":21,"column":30,"nodeType":"211","endLine":21,"endColumn":142},{"ruleId":"209","severity":1,"message":"210","line":22,"column":30,"nodeType":"211","endLine":22,"endColumn":144},{"ruleId":"212","severity":1,"message":"213","line":6,"column":7,"nodeType":"211","endLine":6,"endColumn":32},{"ruleId":"209","severity":1,"message":"210","line":22,"column":27,"nodeType":"211","endLine":22,"endColumn":166},{"ruleId":"196","severity":1,"message":"214","line":15,"column":8,"nodeType":"198","messageId":"199","endLine":15,"endColumn":14},{"ruleId":"196","severity":1,"message":"215","line":17,"column":8,"nodeType":"198","messageId":"199","endLine":17,"endColumn":15},{"ruleId":"196","severity":1,"message":"216","line":6,"column":3,"nodeType":"198","messageId":"199","endLine":6,"endColumn":9},{"ruleId":"196","severity":1,"message":"217","line":12,"column":3,"nodeType":"198","messageId":"199","endLine":12,"endColumn":16},{"ruleId":"196","severity":1,"message":"218","line":18,"column":26,"nodeType":"198","messageId":"199","endLine":18,"endColumn":43},{"ruleId":"196","severity":1,"message":"219","line":8,"column":10,"nodeType":"198","messageId":"199","endLine":8,"endColumn":28},{"ruleId":"196","severity":1,"message":"220","line":9,"column":10,"nodeType":"198","messageId":"199","endLine":9,"endColumn":28},{"ruleId":"196","severity":1,"message":"221","line":10,"column":10,"nodeType":"198","messageId":"199","endLine":10,"endColumn":28},{"ruleId":"196","severity":1,"message":"222","line":3,"column":34,"nodeType":"198","messageId":"199","endLine":3,"endColumn":43},{"ruleId":"196","severity":1,"message":"223","line":2,"column":10,"nodeType":"198","messageId":"199","endLine":2,"endColumn":14},{"ruleId":"196","severity":1,"message":"222","line":8,"column":3,"nodeType":"198","messageId":"199","endLine":8,"endColumn":12},{"ruleId":"196","severity":1,"message":"222","line":3,"column":34,"nodeType":"198","messageId":"199","endLine":3,"endColumn":43},{"ruleId":"196","severity":1,"message":"224","line":9,"column":10,"nodeType":"198","messageId":"199","endLine":9,"endColumn":26},{"ruleId":"196","severity":1,"message":"216","line":2,"column":16,"nodeType":"198","messageId":"199","endLine":2,"endColumn":22},"no-native-reassign",["225"],"no-negated-in-lhs",["226"],"no-unused-vars","'useDispatch' is defined but never used.","Identifier","unusedVar","'products' is assigned a value but never used.","'productsFull' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/no-distracting-elements","Do not use <marquee> elements as they can create visual accessibility issues and are deprecated.","'Loader' is defined but never used.","'Product' is defined but never used.","'Button' is defined but never used.","'ListGroupItem' is defined but never used.","'updateUserProfile' is defined but never used.","'ORDER_CREATE_RESET' is defined but never used.","'USER_DETAILS_RESET' is defined but never used.","'orderCreateReducer' is defined but never used.","'FormGroup' is defined but never used.","'Link' is defined but never used.","'userLoginReducer' is defined but never used.","no-global-assign","no-unsafe-negation"]